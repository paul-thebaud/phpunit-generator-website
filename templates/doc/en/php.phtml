<h3>PHP code</h3>

<p>
    Here is an example of using PhpUnitGen in a PHP script.
</p>

<pre><code class="php language-php">
&lt;?php

use PhpUnitGen\Configuration\BaseConfig;
use PhpUnitGen\Container\ContainerFactory;
use PhpUnitGen\Executor\ExecutorInterface\ExecutorInterface;

// Require your composer autoload
require 'vendor/autoload.php';

// Create the config
$config = new BaseConfig([ /* ... some options ... */ ]);

// Create the dependency container of PhpUnitGen
$container = (new ContainerFactory())-&gt;invoke($config);

$myTestClass = 'MyClassTest';
$myCode = "&lt;?php class MyClass { /* ... some PHP code ... */ }";

// Execute PhpUnitGen on your code to get the tests file content
$myUnitTestsSkeleton = $container-&gt;get(ExecutorInterface::class)-&gt;invoke($myCode, $myTestClass);

// Display the created tests skeletons on output
echo $myUnitTestsSkeleton;
</code></pre>
<br>

<div class="card blue lighten-2">
    <div class="card-content">
        <h5><i class="material-icons left">info</i>Notice</h5>
        <p>
            <code>new BaseConfig()</code> or <code>$container-&gt;get(ExecutorInterface::class)-&gt;invoke($myCode, $myTestClass)</code>
            can throw PHP exception if the config or if the code to parse is invalid.
        </p>
    </div>
</div>
